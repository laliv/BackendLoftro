/**
 * This class is generated by jOOQ
 */
package no.liven.web.loftro.generated;


import javax.annotation.Generated;

import no.liven.web.loftro.generated.tables.Afterhours;
import no.liven.web.loftro.generated.tables.records.AfterhoursRecord;

import org.codehaus.jackson.annotate.JsonIgnore;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>loftro</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------
	@JsonIgnore
	public static final Identity<AfterhoursRecord, Integer> IDENTITY_AFTERHOURS = Identities0.IDENTITY_AFTERHOURS;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------
	@JsonIgnore
	public static final UniqueKey<AfterhoursRecord> KEY_AFTERHOURS_PRIMARY = UniqueKeys0.KEY_AFTERHOURS_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		@JsonIgnore
		public static Identity<AfterhoursRecord, Integer> IDENTITY_AFTERHOURS = createIdentity(Afterhours.AFTERHOURS, Afterhours.AFTERHOURS.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		
		@JsonIgnore
		public static final UniqueKey<AfterhoursRecord> KEY_AFTERHOURS_PRIMARY = createUniqueKey(Afterhours.AFTERHOURS, Afterhours.AFTERHOURS.ID);
	}
}
